/*
 * ER/Studio 8.0 SQL Code Generation
 * Company :      FIUNAM
 * Project :      1Equipo-Appsafe.DM1
 * Authors :      Alvarez Lopez Carlos Manuel
				  Membrilla Isaias Iñaki Ramos
				  Miramón Pérez Jocelyn
				  
 *
 * Date Created : Wednesday, April 16, 2025 17:39:49
 * Target DBMS : Microsoft SQL Server 2008
 */

CREATE DATABASE [APPSAFE]

USE [APPSAFE]

/* 
 * TABLE: ACCIDENTE 
 */

CREATE TABLE ACCIDENTE(
    ID_ACCIDENTE         int       NOT NULL,
    FECHA                date      NOT NULL,
    LONGITUD             float     NOT NULL,
    LATITUD              float     NOT NULL,
    HERIDOS              bit       NOT NULL,
    MONTO                money     NOT NULL,
    ES_RESPONSABLE       bit       NOT NULL,
    ID_TIPO_ACCIDENTE    int       NOT NULL,
    ID_VIAJE             bigint    NOT NULL,
    CONSTRAINT PK_ACCIDENTE PRIMARY KEY NONCLUSTERED (ID_ACCIDENTE)
)
go

IF OBJECT_ID('ACCIDENTE') IS NOT NULL
    PRINT '<<< CREATED TABLE ACCIDENTE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE ACCIDENTE >>>'
go

/* 
 * TABLE: ADMINISTRADOR 
 */

CREATE TABLE ADMINISTRADOR(
    ID_USUARIO       int     NOT NULL,
    FECHA_INGRESO    date    NOT NULL,
    CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY NONCLUSTERED (ID_USUARIO)
)
go



IF OBJECT_ID('ADMINISTRADOR') IS NOT NULL
    PRINT '<<< CREATED TABLE ADMINISTRADOR >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE ADMINISTRADOR >>>'
go

/* 
 * TABLE: AUTOMOVIL 
 */

CREATE TABLE AUTOMOVIL(
    ID_AUTOMOVIL       int         NOT NULL,
    NUMPLACAS          char(8)     NOT NULL,
    AÑO                int         NOT NULL,
    ID_USUARIO         int         NOT NULL,
    ID_MODELO          int         NOT NULL,
    CONSTRAINT PK_AUTOMOVIL PRIMARY KEY NONCLUSTERED (ID_AUTOMOVIL),
);
go



IF OBJECT_ID('AUTOMOVIL') IS NOT NULL
    PRINT '<<< CREATED TABLE AUTOMOVIL >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE AUTOMOVIL >>>'
go

/* 
 * TABLE: BANCO 
 */

CREATE TABLE BANCO(
    ID_BANCO    tinyint        NOT NULL,
    NOMBRE      varchar(40)    NOT NULL,
    CONSTRAINT PK_BANCO PRIMARY KEY NONCLUSTERED (ID_BANCO)
)
go



IF OBJECT_ID('BANCO') IS NOT NULL
    PRINT '<<< CREATED TABLE BANCO >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE BANCO >>>'
go

/* 
 * TABLE: CATALOGO_ACCIDENTES 
 */

CREATE TABLE CATALOGO_ACCIDENTES(
    ID_TIPO_ACCIDENTE    int            NOT NULL,
    TIPO                 varchar(40)    NOT NULL,
    CONSTRAINT PK_CATALOGO_ACCIDENTES PRIMARY KEY NONCLUSTERED (ID_TIPO_ACCIDENTE)
)
go



IF OBJECT_ID('CATALOGO_ACCIDENTES') IS NOT NULL
    PRINT '<<< CREATED TABLE CATALOGO_ACCIDENTES >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE CATALOGO_ACCIDENTES >>>'
go

/* 
 * TABLE: CATALOGO_QUEJAS 
 */

CREATE TABLE CATALOGO_QUEJAS(
    ID_CATALOGO_QUEJAS    int            NOT NULL,
    MOTIVO                varchar(40)    NOT NULL,
    CONSTRAINT PK_CATALOGO_QUEJAS PRIMARY KEY NONCLUSTERED (ID_CATALOGO_QUEJAS)
)
go



IF OBJECT_ID('CATALOGO_QUEJAS') IS NOT NULL
    PRINT '<<< CREATED TABLE CATALOGO_QUEJAS >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE CATALOGO_QUEJAS >>>'
go

/* 
 * TABLE: CLIENTE 
 */

CREATE TABLE CLIENTE(
    ID_USUARIO               int                  NOT NULL,
    RFC                      varchar(13)          NULL,
    CELULAR                  varchar(13)          NOT NULL,
    FECHA_REGISTRO           date                 NOT NULL,
    DIRECCION_FACTURACION    varchar(40)          NOT NULL,
    CONSTRAINT PK_CLIENTE PRIMARY KEY NONCLUSTERED (ID_USUARIO),
    CONSTRAINT CK20_CLIENTE_CELULAR CHECK (LEN(CELULAR) BETWEEN 10 AND 13 AND CELULAR NOT LIKE '%[^0-9]%'),
	CONSTRAINT CK22_CLIENTE_RFC CHECK (LEN(RFC) = 13 AND RFC LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z]')
)
go



IF OBJECT_ID('CLIENTE') IS NOT NULL
    PRINT '<<< CREATED TABLE CLIENTE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE CLIENTE >>>'
go

/* 
 * TABLE: CONDUCTOR 
 */

CREATE TABLE CONDUCTOR(
    ID_USUARIO            int             NOT NULL,
    LICENCIA              varchar(8)      NOT NULL,
    FOTO                  image           NOT NULL,
    VIGENCIA              date            NOT NULL,
    DESCRIPCION           varchar(600)    NOT NULL, -- CK11_CONDUCTOR_DESCRIPCION MANAGED DUE TO STATIC ATRIBUTE LENGHT
    CONSTRAINT PK_CONDUCTOR PRIMARY KEY NONCLUSTERED (ID_USUARIO)
)
go



IF OBJECT_ID('CONDUCTOR') IS NOT NULL
    PRINT '<<< CREATED TABLE CONDUCTOR >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE CONDUCTOR >>>'
go

/* 
 * TABLE: DESCUENTO 
 */

CREATE TABLE DESCUENTO(
    ID_DESCUENTO    int            NOT NULL,
    FECHA_INICIO    date           NOT NULL,
    FECHA_FIN       date           NOT NULL,
    MONTO           money          NOT NULL,
    ORIGEN          varchar(40)    NOT NULL,
    CONSTRAINT PK_DESCUENTO PRIMARY KEY NONCLUSTERED (ID_DESCUENTO)
)
go



IF OBJECT_ID('DESCUENTO') IS NOT NULL
    PRINT '<<< CREATED TABLE DESCUENTO >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE DESCUENTO >>>'
go

/* 
 * TABLE: DESCUENTO_USUARIO_VIAJE 
 */

CREATE TABLE DESCUENTO_USUARIO_VIAJE(
    ID_DESCUENTO    int    NOT NULL,
    ID_USUARIO      int    NOT NULL,
    CONSTRAINT PK_DESCUENTO_USUARIO_VIAJE PRIMARY KEY NONCLUSTERED (ID_DESCUENTO, ID_USUARIO)
)
go



IF OBJECT_ID('DESCUENTO_USUARIO_VIAJE') IS NOT NULL
    PRINT '<<< CREATED TABLE DESCUENTO_USUARIO_VIAJE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE DESCUENTO_USUARIO_VIAJE >>>'
go

/* 
 * TABLE: ESTATUS 
 */

CREATE TABLE ESTATUS(
    ID_ESTATUS             tinyint     NOT NULL,
    NOMBRE_ESTATUS  varchar(40)    NOT NULL,
    CONSTRAINT PK_ESTATUS PRIMARY KEY NONCLUSTERED (ID_ESTATUS),
    CONSTRAINT CK4_ESTATUS_NOMBRE CHECK (NOMBRE_ESTATUS IN ('SOLICITADO','PROGRAMADO','CONFIRMADO','EN CURSO',
                'TERMINADO', 'POR COBRAR', 'PAGADO', 'CON ADEUDO', 'CANCELADO'))
)
go



IF OBJECT_ID('ESTATUS') IS NOT NULL
    PRINT '<<< CREATED TABLE ESTATUS >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE ESTATUS >>>'
go

/* 
 * TABLE: FACTURA 
 */

CREATE TABLE FACTURA(
    UUID            char(32)    NOT NULL,
    ID_USUARIO      int         NOT NULL,
    IMPORTE         money       NOT NULL,
    FECHA           date        NOT NULL,
    CONSTRAINT PK_FACTURA PRIMARY KEY NONCLUSTERED (UUID)
)
go



IF OBJECT_ID('FACTURA') IS NOT NULL
    PRINT '<<< CREATED TABLE FACTURA >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE FACTURA >>>'
go

/* 
 * TABLE: MARCA 
 */

CREATE TABLE MARCA(
    ID_MARCA        int            NOT NULL,
    NOMBRE_MARCA    varchar(40)    NOT NULL,
    CONSTRAINT PK_MARCA PRIMARY KEY NONCLUSTERED (ID_MARCA)
)
go



IF OBJECT_ID('MARCA') IS NOT NULL
    PRINT '<<< CREATED TABLE MARCA >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE MARCA >>>'
go

/* 
 * TABLE: MODELO 
 */

CREATE TABLE MODELO(
    ID_MODELO        int            NOT NULL,
    NOMBRE_MODELO    varchar(40)    NOT NULL,
    ID_MARCA         int            NOT NULL,
    CONSTRAINT PK_MODELO PRIMARY KEY NONCLUSTERED (ID_MODELO)
)
go



IF OBJECT_ID('MODELO') IS NOT NULL
    PRINT '<<< CREATED TABLE MODELO >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE MODELO >>>'
go

/* 
 * TABLE: PAGO 
 */

CREATE TABLE PAGO(
    ID_USUARIO    int     NOT NULL,
    FOLIO		  int     NOT NULL,
    MONTO         money     NOT NULL,
    FECHA         date    NOT NULL,
    CONSTRAINT PK_PAGO PRIMARY KEY NONCLUSTERED (ID_USUARIO, FOLIO)
)
go



IF OBJECT_ID('PAGO') IS NOT NULL
    PRINT '<<< CREATED TABLE PAGO >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE PAGO >>>'
go

/* 
 * TABLE: QUEJA 
 */

CREATE TABLE QUEJA(
    ID_QUEJA                        int            NOT NULL,
    ID_VIAJE                        bigint         NOT NULL,
    TITULO                          varchar(40)    NOT NULL,
    FECHA_GENERACION                date           NOT NULL,
    DESCRIPCION_QUEJA               varchar(40)    NOT NULL,
    DESCRIPCION_RESOLUCION          varchar(40)    NULL,
    FECHA_RESOLUCION                date           NOT NULL,
    ID_CATALOGO_QUEJAS              int            NOT NULL,
    ID_USUARIO                      int            NOT NULL,
    CONSTRAINT PK_QUEJA PRIMARY KEY NONCLUSTERED (ID_QUEJA)
)
go



IF OBJECT_ID('QUEJA') IS NOT NULL
    PRINT '<<< CREATED TABLE QUEJA >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE QUEJA >>>'
go

/* 
 * TABLE: REGISTRO_UBICACION 
 */

CREATE TABLE REGISTRO_UBICACION(
    ID_REGISTRO_UBICACION    bigint      NOT NULL,
    LONGITUD                 float       NOT NULL,
    LATITUD                  float       NOT NULL,
    HORA                     datetime    NOT NULL,
    ID_VIAJE                 bigint      NOT NULL,
    CONSTRAINT PK_REGISTRO_UBICACION PRIMARY KEY NONCLUSTERED (ID_REGISTRO_UBICACION)
)
go



IF OBJECT_ID('REGISTRO_UBICACION') IS NOT NULL
    PRINT '<<< CREATED TABLE REGISTRO_UBICACION >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE REGISTRO_UBICACION >>>'
go

/* 
 * TABLE: TARJETA 
 */

CREATE TABLE TARJETA(
    ID_TARJETA    int               NOT NULL,
    VIGENCIA      date              NOT NULL,
    NUMERO        varchar(20)       NOT NULL,
    ID_BANCO      tinyint           NOT NULL,
    ID_USUARIO    int               NOT NULL,
    CONSTRAINT PK_TARJETA PRIMARY KEY NONCLUSTERED (ID_TARJETA),
    CONSTRAINT CK21_TARJETA_NUMERO CHECK (NUMERO NOT LIKE '%[^0-9]%' AND LEN(NUMERO) BETWEEN 16 AND 20)
)
go



IF OBJECT_ID('TARJETA') IS NOT NULL
    PRINT '<<< CREATED TABLE TARJETA >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE TARJETA >>>'
go

/* 
 * TABLE: TELEFONO 
 */

CREATE TABLE TELEFONO(
    ID_USUARIO    int                  NOT NULL,
    TELEFONO      varchar(13)          NOT NULL,
    CONSTRAINT PK_TELEFONO PRIMARY KEY NONCLUSTERED (ID_USUARIO, TELEFONO),
    CONSTRAINT CK20_TELEFONO_TELEFONO CHECK (LEN(TELEFONO) BETWEEN 10 AND 13 AND TELEFONO NOT LIKE '%[^0-9]%')
)
go

IF OBJECT_ID('TELEFONO') IS NOT NULL
    PRINT '<<< CREATED TABLE TELEFONO >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE TELEFONO >>>'
go

/* 
 * TABLE: USUARIO 
 */

CREATE TABLE USUARIO(
    ID_USUARIO                 int              NOT NULL,
    ID_RECOMENDANTE            int              NULL,
    ES_ADMINISTRADOR           bit              NOT NULL,
    ES_CONDUCTOR               bit              NOT NULL,
    ES_CLIENTE                 bit              NOT NULL,
    CONTRASEÑA                 varchar(10)      NOT NULL,
    NOMBRE_USUARIO             varchar(40)      NOT NULL,
    CORREO                     varchar(40)      NOT NULL,
    NOMBRE                     varchar(40)      NOT NULL,
    APELLIDO1                  varchar(40)      NOT NULL,
    APELLIDO2                  varchar(40)      NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY NONCLUSTERED (ID_USUARIO),
    CONSTRAINT CK3_USUARIO_TIPO_ADMIN_CONDUCTOR CHECK (NOT (ES_ADMINISTRADOR = 1 AND ES_CONDUCTOR = 1)),
    CONSTRAINT CK10_USUARIO_CONTRASEÑA_FORMATO CHECK (CONTRASEÑA LIKE '%[0-9]%' AND CONTRASEÑA LIKE '%[A-Z]%'
                                                    AND CONTRASEÑA LIKE '%[*#&]%')
)
go



IF OBJECT_ID('USUARIO') IS NOT NULL
    PRINT '<<< CREATED TABLE USUARIO >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE USUARIO >>>'
go

/* 
 * TABLE: VIAJE 
 */

CREATE TABLE VIAJE(
    ID_VIAJE                       bigint          NOT NULL,
    FECHA_INICIOVIAJE              datetime        NOT NULL,
    ORIGEN_LONGITUD                float           NOT NULL,
    ORIGEN_LATITUD                 float           NOT NULL,
    DESTINO_LONGITUD               float           NOT NULL,
    DESTINO_LATITUD                float           NOT NULL,
    IMPORTE                        money           NOT NULL,
    PROPINA                        money           NULL CONSTRAINT DF15_VIAJE_PROPINA DEFAULT 0.00,
    ADEUDO                         money           NULL CONSTRAINT DF17_VIAJE_ADEUDO DEFAULT 0.00,
    CALIFICACION                   int             NULL,
    COMENTARIO                     varchar(400)    NULL CONSTRAINT DF_VIAJE_COMENTARIO DEFAULT 'Sin comentario',
    PAGO_CON_TARJETA               bit             NOT NULL,
    ID_ESTATUS                     tinyint         NOT NULL,
    ID_TARJETA                     int             NULL,
    ID_USUARIO                     int             NOT NULL,
    UUID                           varchar(32)     NULL,
    ID_AUTOMOVIL                        int             NOT NULL,
    ID_DESCUENTO                   int             NULL,
    CONSTRAINT PK_VIAJE PRIMARY KEY NONCLUSTERED (ID_VIAJE),
    CONSTRAINT CK5_VIAJE_CALIFICACION CHECK (CALIFICACION <= 5 AND CALIFICACION >= 0),
    CONSTRAINT CK15_VIAJE_PROPINA CHECK (PROPINA IN (0,10,15,20))
)
go

DROP TABLE VIAJE

IF OBJECT_ID('VIAJE') IS NOT NULL
    PRINT '<<< CREATED TABLE VIAJE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE VIAJE >>>'
go

/* 
 * TABLE: VIAJE_ESTATUS 
 */

CREATE TABLE VIAJE_ESTATUS(
    ID_VIAJE      bigint      NOT NULL,
    ID_ESTATUS    tinyint     NOT NULL,
    FECHA_HORA    datetime    NOT NULL,
    CONSTRAINT PK_VIAJE_ESTATUS PRIMARY KEY NONCLUSTERED (ID_VIAJE, ID_ESTATUS)
)
go



IF OBJECT_ID('VIAJE_ESTATUS') IS NOT NULL
    PRINT '<<< CREATED TABLE VIAJE_ESTATUS >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE VIAJE_ESTATUS >>>'
go

/* 
 * TABLE: ACCIDENTE 
 */

ALTER TABLE ACCIDENTE ADD CONSTRAINT FK_ACCIDENTE_CATALOGO_ACCIDENTES  
    FOREIGN KEY (ID_TIPO_ACCIDENTE)
    REFERENCES CATALOGO_ACCIDENTES(ID_TIPO_ACCIDENTE)
    ON DELETE SET NULL
go

ALTER TABLE ACCIDENTE ADD CONSTRAINT FK_ACCIDENTE_VIAJE  
    FOREIGN KEY (ID_VIAJE)
    REFERENCES VIAJE(ID_VIAJE)
    ON DELETE SET NULL
go


/* 
 * TABLE: ADMINISTRADOR 
 */

ALTER TABLE ADMINISTRADOR ADD CONSTRAINT FK_ADMINISTRADOR_USUARIO  
    FOREIGN KEY (ID_USUARIO)
    REFERENCES USUARIO(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: AUTOMOVIL 
 */

ALTER TABLE AUTOMOVIL ADD CONSTRAINT FK_AUTOMOVIL_CONDUCTOR
    FOREIGN KEY (ID_USUARIO)
    REFERENCES CONDUCTOR(ID_USUARIO)
    ON DELETE SET NULL
go

ALTER TABLE AUTOMOVIL ADD CONSTRAINT FK_AUTOMOVIL_MODELO
    FOREIGN KEY (ID_MODELO)
    REFERENCES MODELO(ID_MODELO)
    ON DELETE SET NULL
go


/* 
 * TABLE: CLIENTE 
 */

ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_USUARIO
    FOREIGN KEY (ID_USUARIO)
    REFERENCES USUARIO(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: CONDUCTOR 
 */

ALTER TABLE CONDUCTOR ADD CONSTRAINT FK_CONDUCTOR_USUARIO
    FOREIGN KEY (ID_USUARIO)
    REFERENCES USUARIO(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: DESCUENTO_USUARIO_VIAJE 
 */

ALTER TABLE DESCUENTO_USUARIO_VIAJE ADD CONSTRAINT FK_DESCUENTO_USUARIO_VIAJE_DESCUENTO
    FOREIGN KEY (ID_DESCUENTO)
    REFERENCES DESCUENTO(ID_DESCUENTO)
    ON DELETE SET NULL
go

ALTER TABLE DESCUENTO_USUARIO_VIAJE ADD CONSTRAINT FK_DESCUENTO_USUARIO_VIAJE_USUARIO
    FOREIGN KEY (ID_USUARIO)
    REFERENCES USUARIO(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: FACTURA 
 */

ALTER TABLE FACTURA ADD CONSTRAINT FK_FACTURA_CLIENTE
    FOREIGN KEY (ID_USUARIO)
    REFERENCES CLIENTE(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: MODELO 
 */

ALTER TABLE MODELO ADD CONSTRAINT FK_MODELO_MARCA
    FOREIGN KEY (ID_MARCA)
    REFERENCES MARCA(ID_MARCA)
    ON DELETE SET NULL
go


/* 
 * TABLE: PAGO 
 */

ALTER TABLE PAGO ADD CONSTRAINT FK_PAGO_CONDUCTOR
    FOREIGN KEY (ID_USUARIO)
    REFERENCES CONDUCTOR(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: QUEJA 
 */

ALTER TABLE QUEJA ADD CONSTRAINT FK_QUEJA_VIAJE
    FOREIGN KEY (ID_VIAJE)
    REFERENCES VIAJE(ID_VIAJE)
    ON DELETE SET NULL
go

ALTER TABLE QUEJA ADD CONSTRAINT FK_QUEJA_ADMINISTRADOR
    FOREIGN KEY (ID_USUARIO)
    REFERENCES ADMINISTRADOR(ID_USUARIO)
    ON DELETE SET NULL
go

ALTER TABLE QUEJA ADD CONSTRAINT FK_QUEJA_CATALOGO_QUEJAS
    FOREIGN KEY (ID_CATALOGO_QUEJAS)
    REFERENCES CATALOGO_QUEJAS(ID_CATALOGO_QUEJAS)
    ON DELETE SET NULL
go


/* 
 * TABLE: REGISTRO_UBICACION 
 */

ALTER TABLE REGISTRO_UBICACION ADD CONSTRAINT FK_REGISTRO_UBICACION_VIAJE  
    FOREIGN KEY (ID_VIAJE)
    REFERENCES VIAJE(ID_VIAJE)
    ON DELETE SET NULL
go


/* 
 * TABLE: TARJETA 
 */

ALTER TABLE TARJETA ADD CONSTRAINT FK_TARJETA_BANCO
    FOREIGN KEY (ID_BANCO)
    REFERENCES BANCO(ID_BANCO)
    ON DELETE SET NULL
go

ALTER TABLE TARJETA ADD CONSTRAINT FK_TARJETA_CLIENTE
    FOREIGN KEY (ID_USUARIO)
    REFERENCES CLIENTE(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: TELEFONO 
 */

ALTER TABLE TELEFONO ADD CONSTRAINT FK_TELEFONO_ADMINISTRADOR
    FOREIGN KEY (ID_USUARIO)
    REFERENCES ADMINISTRADOR(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: USUARIO 
 */

ALTER TABLE USUARIO ADD CONSTRAINT FK_USUARIO_USUARIO
    FOREIGN KEY (ID_RECOMENDANTE)
    REFERENCES USUARIO(ID_USUARIO)
    ON DELETE SET NULL
go


/* 
 * TABLE: VIAJE 
 */

ALTER TABLE VIAJE ADD CONSTRAINT FK_VIAJE_DESCUENTO_USUARIO_VIAJE
    FOREIGN KEY (ID_DESCUENTO, ID_USUARIO)
    REFERENCES DESCUENTO_USUARIO_VIAJE(ID_DESCUENTO, ID_USUARIO)
    ON DELETE SET NULL
go

ALTER TABLE VIAJE ADD CONSTRAINT FK_VIAJE_ESTATUS  
    FOREIGN KEY (ID_ESTATUS)
    REFERENCES ESTATUS(ID_ESTATUS)
    ON DELETE SET NULL
go

ALTER TABLE VIAJE ADD CONSTRAINT FK_VIAJE_TARJETA
    FOREIGN KEY (ID_TARJETA)
    REFERENCES TARJETA(ID_TARJETA)
    ON DELETE SET NULL
go

ALTER TABLE VIAJE ADD CONSTRAINT FK_VIAJE_CLIENTE
    FOREIGN KEY (ID_USUARIO)
    REFERENCES CLIENTE(ID_USUARIO)
    ON DELETE SET NULL
go

ALTER TABLE VIAJE ADD CONSTRAINT FK_VIAJE_FACTURA
    FOREIGN KEY (UUID)
    REFERENCES FACTURA(UUID)
    ON DELETE SET NULL
go

ALTER TABLE VIAJE ADD CONSTRAINT FK_VIAJE_AUTOMOVIL
    FOREIGN KEY (ID_AUTOMOVIL)
    REFERENCES AUTOMOVIL(ID_AUTOMOVIL)
    ON DELETE SET NULL
go


/* 
 * TABLE: [VIAJE_ESTATUS] 
 */

ALTER TABLE VIAJE_ESTATUS ADD CONSTRAINT RefVIAJE_ESTATUS_VIAJE
    FOREIGN KEY (ID_VIAJE)
    REFERENCES VIAJE(ID_VIAJE)
    ON DELETE SET NULL
go

ALTER TABLE VIAJE_ESTATUS ADD CONSTRAINT RefVIAJE_ESTATUS_ESTATUS 
    FOREIGN KEY (ID_ESTATUS)
    REFERENCES ESTATUS(ID_ESTATUS)
    ON DELETE SET NULL
go


/*
 * Schemes
 */

CREATE SCHEMA USUARIOS AUTHORIZATION DBO;
GO
CREATE SCHEMA CATALOGOS AUTHORIZATION DBO;
GO
CREATE SCHEMA OPERACIONES AUTHORIZATION DBO;
GO
CREATE SCHEMA INCIDENCIAS AUTHORIZATION DBO;
GO
CREATE SCHEMA REGISTROS AUTHORIZATION DBO;
GO

ALTER SCHEMA USUARIOS TRANSFER dbo.USUARIO;
ALTER SCHEMA USUARIOS TRANSFER dbo.CLIENTE;
ALTER SCHEMA USUARIOS TRANSFER dbo.CONDUCTOR;
ALTER SCHEMA USUARIOS TRANSFER dbo.ADMINISTRADOR;
ALTER SCHEMA USUARIOS TRANSFER dbo.TELEFONO;
ALTER SCHEMA USUARIOS TRANSFER dbo.TARJETA;
ALTER SCHEMA USUARIOS TRANSFER dbo.AUTOMOVIL;

ALTER SCHEMA CATALOGOS TRANSFER dbo.CATALOGO_ACCIDENTES;
ALTER SCHEMA CATALOGOS TRANSFER dbo.CATALOGO_QUEJAS;
ALTER SCHEMA CATALOGOS TRANSFER dbo.ESTATUS;
ALTER SCHEMA CATALOGOS TRANSFER dbo.MARCA;
ALTER SCHEMA CATALOGOS TRANSFER dbo.MODELO;
ALTER SCHEMA CATALOGOS TRANSFER dbo.BANCO;

ALTER SCHEMA OPERACIONES TRANSFER dbo.VIAJE;
ALTER SCHEMA OPERACIONES TRANSFER dbo.PAGO;
ALTER SCHEMA OPERACIONES TRANSFER dbo.FACTURA;
ALTER SCHEMA OPERACIONES TRANSFER dbo.DESCUENTO;
ALTER SCHEMA OPERACIONES TRANSFER dbo.DESCUENTO_USUARIO_VIAJE;

ALTER SCHEMA INCIDENCIAS TRANSFER dbo.ACCIDENTE;
ALTER SCHEMA INCIDENCIAS TRANSFER dbo.QUEJA;

ALTER SCHEMA REGISTROS TRANSFER dbo.REGISTRO_UBICACION;

GO